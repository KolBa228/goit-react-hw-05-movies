{"version":3,"file":"static/js/757.0fea576f.chunk.js","mappings":"sQA8CA,EAzCqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAepD,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6GAEYC,EAAAA,EAAAA,kBAA8Bb,GAF1C,OAERc,EAFQ,OAGdV,EAAgBU,GAHF,gDAKdC,QAAQC,MAAM,gCAAd,MALc,yDAAH,qDASfJ,GACD,GAAE,CAACZ,IAECG,GAKH,4BACE,SAAC,KAAD,CAAMc,GAAIV,EAAaW,QAAvB,mBACA,wBAAKf,EAAagB,SAClB,gBAAKC,IAAG,wCAAmCjB,EAAakB,aAAeC,IAAKnB,EAAagB,SACzF,oCAAYhB,EAAaoB,iBACzB,sCAAcpB,EAAaqB,aAC3B,oCAAYrB,EAAasB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAC9D,SAAC,KAAD,CAAMZ,GAAE,kBAAajB,EAAb,SAAR,wBACA,SAAC,KAAD,CAAMiB,GAAE,kBAAajB,EAAb,YAAR,2BAEA,SAAC,EAAA8B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAfG,qCAmBV,C,oDC5CKC,EAAW,+BACXC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+FACQC,EADR,UACiBH,EADjB,sDACuEC,GADvE,kBAI2BG,MAAMD,GAJjC,cAIUE,EAJV,gBAKuBA,EAASC,OALhC,UAKUC,EALV,OAOSF,EAASG,GAPlB,uBAQY,IAAIC,MAAJ,uBACYF,EAAKG,YADjB,6BACiDH,EAAKI,iBATlE,iCAaWJ,EAAKK,SAbhB,wCAeU,IAAIH,MAAM,KAAMI,SAf1B,iFAmBeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,kFACQZ,EADR,UACiBH,EADjB,+BACgDe,EADhD,uDACoGd,GADpG,kBAI2BG,MAAMD,GAJjC,cAIUE,EAJV,gBAKuBA,EAASC,OALhC,UAKUC,EALV,OAOSF,EAASG,GAPlB,uBAQY,IAAIC,MAAJ,uBACYF,EAAKG,YADjB,6BACiDH,EAAKI,iBATlE,iCAaWJ,GAbX,wCAeU,IAAIE,MAAM,KAAMI,SAf1B,iFAmBeG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiChD,GAAjC,kFACQmC,EADR,UACiBH,EADjB,kBACmChC,EADnC,mCACqEiC,GADrE,kBAI2BG,MAAMD,GAJjC,cAIUE,EAJV,gBAKuBA,EAASC,OALhC,UAKUC,EALV,OAOSF,EAASG,GAPlB,uBAQY,IAAIC,MAAJ,uBACYF,EAAKG,YADjB,6BACiDH,EAAKI,iBATlE,iCAaWJ,GAbX,wCAeU,IAAIE,MAAJ,MAfV,iFAmBeQ,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCjD,GAAjC,kFACQmC,EADR,UACiBH,EADjB,kBACmChC,EADnC,2CAC6EiC,GAD7E,kBAI2BG,MAAMD,GAJjC,cAIUE,EAJV,gBAKuBA,EAASC,OALhC,UAKUC,EALV,OAOSF,EAASG,GAPlB,uBAQY,IAAIC,MAAJ,uBACYF,EAAKG,YADjB,6BACiDH,EAAKI,iBATlE,iCAaWJ,GAbX,wCAeU,IAAIE,MAAJ,MAfV,iFAmBeS,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiClD,GAAjC,kFACQmC,EADR,UACiBH,EADjB,kBACmChC,EADnC,mDACqFiC,GADrF,kBAI2BG,MAAMD,GAJjC,cAIUE,EAJV,gBAKuBA,EAASC,OALhC,UAKUC,EALV,OAOSF,EAASG,GAPlB,uBAQY,IAAIC,MAAJ,uBACYF,EAAKG,YADjB,6BACiDH,EAAKI,iBATlE,iCAaWJ,GAbX,wCAeU,IAAIE,MAAJ,MAfV,iFAmBA,IAAM5B,EAAc,CAClBqB,oBAlGF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAiGbY,kBAjGF,SAmBiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA+EbE,kBA/EF,SAmBiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA6DbC,kBA7DF,SAmBiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA2CbC,kBA3CF,SAmBiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GA2Bf,K,sBC1GA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO5C,GAEP,YADAsC,EAAOtC,EAET,CAEI2C,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/MovieDetails/MovieDetails.jsx","services/fetch.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState, Suspense, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation, } from 'react-router-dom';\nimport APIservices from \"services/fetch\";\nimport './style.css'\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const detailsData = await APIservices.fetchMovieDetails(movieId);\n        setMovieDetails(detailsData);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Back</Link>\n      <h2>{movieDetails.title}</h2>\n      <img src={`http://image.tmdb.org/t/p/w300${movieDetails.poster_path}`} alt={movieDetails.title} />\n      <p>Rating: {movieDetails.vote_average}</p>\n      <p>Overview: {movieDetails.overview}</p>\n      <p>Genres: {movieDetails.genres.map(genre => genre.name).join(', ')}</p>\n      <Link to={`/movies/${movieId}/cast`}>View Cast</Link>\n      <Link to={`/movies/${movieId}/reviews`}>View Reviews</Link>\n      \n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '15da45b97ad657540cf457ee5b3df568';\n\nasync function fetchTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(\n        `Status code: ${data.status_code}. Status message: ${data.status_message}`\n      );\n    }\n\n    return data.results;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nasync function fetchMoviesByName(query) {\n  const url = `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(\n        `Status code: ${data.status_code}. Status message: ${data.status_message}`\n      );\n    }\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nasync function fetchMovieDetails(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(\n        `Status code: ${data.status_code}. Status message: ${data.status_message}`\n      );\n    }\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function fetchMovieCredits(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(\n        `Status code: ${data.status_code}. Status message: ${data.status_message}`\n      );\n    }\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?language=en-US&&page=1&api_key=${API_KEY}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(\n        `Status code: ${data.status_code}. Status message: ${data.status_message}`\n      );\n    }\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nconst APIservices = {\n  fetchTrendingMovies,\n  fetchMoviesByName,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n\nexport default APIservices;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchData","APIservices","detailsData","console","error","to","current","title","src","poster_path","alt","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","BASE_URL","API_KEY","fetchTrendingMovies","url","fetch","response","json","data","ok","Error","status_code","status_message","results","message","fetchMoviesByName","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}